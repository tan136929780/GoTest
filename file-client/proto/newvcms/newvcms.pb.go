// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: proto/newvcms.proto

package newvcms

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OperationEnum int32

const (
	OperationEnum_NORMAL   OperationEnum = 0
	OperationEnum_RELATION OperationEnum = 1
)

// Enum value maps for OperationEnum.
var (
	OperationEnum_name = map[int32]string{
		0: "NORMAL",
		1: "RELATION",
	}
	OperationEnum_value = map[string]int32{
		"NORMAL":   0,
		"RELATION": 1,
	}
)

func (x OperationEnum) Enum() *OperationEnum {
	p := new(OperationEnum)
	*p = x
	return p
}

func (x OperationEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_newvcms_proto_enumTypes[0].Descriptor()
}

func (OperationEnum) Type() protoreflect.EnumType {
	return &file_proto_newvcms_proto_enumTypes[0]
}

func (x OperationEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationEnum.Descriptor instead.
func (OperationEnum) EnumDescriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{0}
}

type Sorter_OrderEnum int32

const (
	Sorter_ORDERASC  Sorter_OrderEnum = 0
	Sorter_ORDERDESC Sorter_OrderEnum = 1
)

// Enum value maps for Sorter_OrderEnum.
var (
	Sorter_OrderEnum_name = map[int32]string{
		0: "ORDERASC",
		1: "ORDERDESC",
	}
	Sorter_OrderEnum_value = map[string]int32{
		"ORDERASC":  0,
		"ORDERDESC": 1,
	}
)

func (x Sorter_OrderEnum) Enum() *Sorter_OrderEnum {
	p := new(Sorter_OrderEnum)
	*p = x
	return p
}

func (x Sorter_OrderEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sorter_OrderEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_newvcms_proto_enumTypes[1].Descriptor()
}

func (Sorter_OrderEnum) Type() protoreflect.EnumType {
	return &file_proto_newvcms_proto_enumTypes[1]
}

func (x Sorter_OrderEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sorter_OrderEnum.Descriptor instead.
func (Sorter_OrderEnum) EnumDescriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{20, 0}
}

type RelationFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelationIdentifier string `protobuf:"bytes,1,opt,name=relation_identifier,json=relationIdentifier,proto3" json:"relation_identifier,omitempty"`
	// 条件组织 %s占位 ((%s and %s) or (%s and %s)) and %s
	Expression string `protobuf:"bytes,2,opt,name=expression,proto3" json:"expression,omitempty"`
	// 关系属性条件 条件顺序和%s相同
	PropertyExpression []*PropertyExpression `protobuf:"bytes,3,rep,name=property_expression,json=propertyExpression,proto3" json:"property_expression,omitempty"`
	//源节点条件
	SourceIdentifier string `protobuf:"bytes,4,opt,name=source_identifier,json=sourceIdentifier,proto3" json:"source_identifier,omitempty"`
	//目标节点条件
	TargetIdentifier string `protobuf:"bytes,5,opt,name=target_identifier,json=targetIdentifier,proto3" json:"target_identifier,omitempty"`
	//源节点条件
	Condition *SearchCondition `protobuf:"bytes,6,opt,name=condition,proto3" json:"condition,omitempty"`
}

func (x *RelationFilter) Reset() {
	*x = RelationFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationFilter) ProtoMessage() {}

func (x *RelationFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationFilter.ProtoReflect.Descriptor instead.
func (*RelationFilter) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{0}
}

func (x *RelationFilter) GetRelationIdentifier() string {
	if x != nil {
		return x.RelationIdentifier
	}
	return ""
}

func (x *RelationFilter) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *RelationFilter) GetPropertyExpression() []*PropertyExpression {
	if x != nil {
		return x.PropertyExpression
	}
	return nil
}

func (x *RelationFilter) GetSourceIdentifier() string {
	if x != nil {
		return x.SourceIdentifier
	}
	return ""
}

func (x *RelationFilter) GetTargetIdentifier() string {
	if x != nil {
		return x.TargetIdentifier
	}
	return ""
}

func (x *RelationFilter) GetCondition() *SearchCondition {
	if x != nil {
		return x.Condition
	}
	return nil
}

type PropertyExpression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 属性
	Property string `protobuf:"bytes,1,opt,name=property,proto3" json:"property,omitempty"`
	// 操作符
	Operator string `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	// 属性值
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PropertyExpression) Reset() {
	*x = PropertyExpression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyExpression) ProtoMessage() {}

func (x *PropertyExpression) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyExpression.ProtoReflect.Descriptor instead.
func (*PropertyExpression) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{1}
}

func (x *PropertyExpression) GetProperty() string {
	if x != nil {
		return x.Property
	}
	return ""
}

func (x *PropertyExpression) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *PropertyExpression) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SearchCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 获取identifier
	TypeIdentifier string `protobuf:"bytes,1,opt,name=type_identifier,json=typeIdentifier,proto3" json:"type_identifier,omitempty"`
	// 返回的数据列 [property1, property2]
	Properties []string  `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty"`
	Page       int32     `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize   int32     `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sorters    []*Sorter `protobuf:"bytes,5,rep,name=sorters,proto3" json:"sorters,omitempty"`
	// 条件组织 %s占位 ((%s and %s) or (%s and %s)) and %s
	Expression string `protobuf:"bytes,6,opt,name=expression,proto3" json:"expression,omitempty"`
	// 关系属性条件 条件顺序和%s相同
	PropertyExpression []*PropertyExpression `protobuf:"bytes,7,rep,name=property_expression,json=propertyExpression,proto3" json:"property_expression,omitempty"`
	IsGroupby          bool                  `protobuf:"varint,8,opt,name=is_groupby,json=isGroupby,proto3" json:"is_groupby,omitempty"`
	GroupbyProperty    string                `protobuf:"bytes,9,opt,name=groupby_property,json=groupbyProperty,proto3" json:"groupby_property,omitempty"`
	//关系条件
	RelationFilters []*RelationFilter `protobuf:"bytes,10,rep,name=relation_filters,json=relationFilters,proto3" json:"relation_filters,omitempty"`
}

func (x *SearchCondition) Reset() {
	*x = SearchCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCondition) ProtoMessage() {}

func (x *SearchCondition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCondition.ProtoReflect.Descriptor instead.
func (*SearchCondition) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{2}
}

func (x *SearchCondition) GetTypeIdentifier() string {
	if x != nil {
		return x.TypeIdentifier
	}
	return ""
}

func (x *SearchCondition) GetProperties() []string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *SearchCondition) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchCondition) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchCondition) GetSorters() []*Sorter {
	if x != nil {
		return x.Sorters
	}
	return nil
}

func (x *SearchCondition) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *SearchCondition) GetPropertyExpression() []*PropertyExpression {
	if x != nil {
		return x.PropertyExpression
	}
	return nil
}

func (x *SearchCondition) GetIsGroupby() bool {
	if x != nil {
		return x.IsGroupby
	}
	return false
}

func (x *SearchCondition) GetGroupbyProperty() string {
	if x != nil {
		return x.GroupbyProperty
	}
	return ""
}

func (x *SearchCondition) GetRelationFilters() []*RelationFilter {
	if x != nil {
		return x.RelationFilters
	}
	return nil
}

type RelationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 关系identifier
	RelationIdentifier string `protobuf:"bytes,1,opt,name=relation_identifier,json=relationIdentifier,proto3" json:"relation_identifier,omitempty"`
	//源节点条件
	SourceIdentifier string `protobuf:"bytes,2,opt,name=source_identifier,json=sourceIdentifier,proto3" json:"source_identifier,omitempty"`
	//目标节点条件
	TargetIdentifier string `protobuf:"bytes,3,opt,name=target_identifier,json=targetIdentifier,proto3" json:"target_identifier,omitempty"`
	// 关联模型占位uid，规则：_:uid，如果是实际uid则输入实际uid
	RelationUid []string `protobuf:"bytes,4,rep,name=relation_uid,json=relationUid,proto3" json:"relation_uid,omitempty"`
}

func (x *RelationInfo) Reset() {
	*x = RelationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationInfo) ProtoMessage() {}

func (x *RelationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationInfo.ProtoReflect.Descriptor instead.
func (*RelationInfo) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{3}
}

func (x *RelationInfo) GetRelationIdentifier() string {
	if x != nil {
		return x.RelationIdentifier
	}
	return ""
}

func (x *RelationInfo) GetSourceIdentifier() string {
	if x != nil {
		return x.SourceIdentifier
	}
	return ""
}

func (x *RelationInfo) GetTargetIdentifier() string {
	if x != nil {
		return x.TargetIdentifier
	}
	return ""
}

func (x *RelationInfo) GetRelationUid() []string {
	if x != nil {
		return x.RelationUid
	}
	return nil
}

type InstanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 当前模型identifier
	TypeIdentifier string            `protobuf:"bytes,1,opt,name=type_identifier,json=typeIdentifier,proto3" json:"type_identifier,omitempty"`
	Values         map[string]string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 关联插入时占位当前模型uid，规则：_:uid
	Uid string `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	// 关系条件
	RelationInfo []*RelationInfo `protobuf:"bytes,5,rep,name=relation_info,json=relationInfo,proto3" json:"relation_info,omitempty"`
}

func (x *InstanceInfo) Reset() {
	*x = InstanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceInfo) ProtoMessage() {}

func (x *InstanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceInfo.ProtoReflect.Descriptor instead.
func (*InstanceInfo) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{4}
}

func (x *InstanceInfo) GetTypeIdentifier() string {
	if x != nil {
		return x.TypeIdentifier
	}
	return ""
}

func (x *InstanceInfo) GetValues() map[string]string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *InstanceInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *InstanceInfo) GetRelationInfo() []*RelationInfo {
	if x != nil {
		return x.RelationInfo
	}
	return nil
}

type InstanceCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instances []*InstanceInfo `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
}

func (x *InstanceCreateRequest) Reset() {
	*x = InstanceCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceCreateRequest) ProtoMessage() {}

func (x *InstanceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceCreateRequest.ProtoReflect.Descriptor instead.
func (*InstanceCreateRequest) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{5}
}

func (x *InstanceCreateRequest) GetInstances() []*InstanceInfo {
	if x != nil {
		return x.Instances
	}
	return nil
}

type InstanceCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Uid     []string `protobuf:"bytes,3,rep,name=uid,proto3" json:"uid,omitempty"`
}

func (x *InstanceCreateResponse) Reset() {
	*x = InstanceCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceCreateResponse) ProtoMessage() {}

func (x *InstanceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceCreateResponse.ProtoReflect.Descriptor instead.
func (*InstanceCreateResponse) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{6}
}

func (x *InstanceCreateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *InstanceCreateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InstanceCreateResponse) GetUid() []string {
	if x != nil {
		return x.Uid
	}
	return nil
}

type InstanceUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instances []*InstanceInfo `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
}

func (x *InstanceUpdateRequest) Reset() {
	*x = InstanceUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceUpdateRequest) ProtoMessage() {}

func (x *InstanceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceUpdateRequest.ProtoReflect.Descriptor instead.
func (*InstanceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{7}
}

func (x *InstanceUpdateRequest) GetInstances() []*InstanceInfo {
	if x != nil {
		return x.Instances
	}
	return nil
}

type InstanceFindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Condition []*SearchCondition `protobuf:"bytes,1,rep,name=condition,proto3" json:"condition,omitempty"`
}

func (x *InstanceFindRequest) Reset() {
	*x = InstanceFindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceFindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceFindRequest) ProtoMessage() {}

func (x *InstanceFindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceFindRequest.ProtoReflect.Descriptor instead.
func (*InstanceFindRequest) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{8}
}

func (x *InstanceFindRequest) GetCondition() []*SearchCondition {
	if x != nil {
		return x.Condition
	}
	return nil
}

type FindResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Total    string `protobuf:"bytes,3,opt,name=total,proto3" json:"total,omitempty"`
	Data     string `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FindResponse) Reset() {
	*x = FindResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindResponse) ProtoMessage() {}

func (x *FindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindResponse.ProtoReflect.Descriptor instead.
func (*FindResponse) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{9}
}

func (x *FindResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindResponse) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *FindResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type InstanceFindResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result  []*FindResponse `protobuf:"bytes,3,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *InstanceFindResponse) Reset() {
	*x = InstanceFindResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceFindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceFindResponse) ProtoMessage() {}

func (x *InstanceFindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceFindResponse.ProtoReflect.Descriptor instead.
func (*InstanceFindResponse) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{10}
}

func (x *InstanceFindResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *InstanceFindResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InstanceFindResponse) GetResult() []*FindResponse {
	if x != nil {
		return x.Result
	}
	return nil
}

type MetaDataFindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//模型标识
	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
}

func (x *MetaDataFindRequest) Reset() {
	*x = MetaDataFindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaDataFindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaDataFindRequest) ProtoMessage() {}

func (x *MetaDataFindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaDataFindRequest.ProtoReflect.Descriptor instead.
func (*MetaDataFindRequest) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{11}
}

func (x *MetaDataFindRequest) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

type MetaDataFindResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MetaDataFindResponse) Reset() {
	*x = MetaDataFindResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaDataFindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaDataFindResponse) ProtoMessage() {}

func (x *MetaDataFindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaDataFindResponse.ProtoReflect.Descriptor instead.
func (*MetaDataFindResponse) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{12}
}

func (x *MetaDataFindResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MetaDataFindResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MetaDataFindResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type RelationDeleteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 关系模型identifier
	RelationIdentifier string `protobuf:"bytes,1,opt,name=relation_identifier,json=relationIdentifier,proto3" json:"relation_identifier,omitempty"`
	//源节点条件
	SourceIdentifier string `protobuf:"bytes,2,opt,name=source_identifier,json=sourceIdentifier,proto3" json:"source_identifier,omitempty"`
	//目标节点条件
	TargetIdentifier string `protobuf:"bytes,3,opt,name=target_identifier,json=targetIdentifier,proto3" json:"target_identifier,omitempty"`
	// 关联uid列表
	RelationUid []string `protobuf:"bytes,4,rep,name=relation_uid,json=relationUid,proto3" json:"relation_uid,omitempty"`
}

func (x *RelationDeleteInfo) Reset() {
	*x = RelationDeleteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationDeleteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationDeleteInfo) ProtoMessage() {}

func (x *RelationDeleteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationDeleteInfo.ProtoReflect.Descriptor instead.
func (*RelationDeleteInfo) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{13}
}

func (x *RelationDeleteInfo) GetRelationIdentifier() string {
	if x != nil {
		return x.RelationIdentifier
	}
	return ""
}

func (x *RelationDeleteInfo) GetSourceIdentifier() string {
	if x != nil {
		return x.SourceIdentifier
	}
	return ""
}

func (x *RelationDeleteInfo) GetTargetIdentifier() string {
	if x != nil {
		return x.TargetIdentifier
	}
	return ""
}

func (x *RelationDeleteInfo) GetRelationUid() []string {
	if x != nil {
		return x.RelationUid
	}
	return nil
}

// 删除
type DeleteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 模型标识
	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	//uid
	Uid string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	// 删除的边
	RelationDeleteInfo []*RelationDeleteInfo `protobuf:"bytes,3,rep,name=relation_delete_info,json=relationDeleteInfo,proto3" json:"relation_delete_info,omitempty"`
}

func (x *DeleteInfo) Reset() {
	*x = DeleteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInfo) ProtoMessage() {}

func (x *DeleteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInfo.ProtoReflect.Descriptor instead.
func (*DeleteInfo) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteInfo) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *DeleteInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *DeleteInfo) GetRelationDeleteInfo() []*RelationDeleteInfo {
	if x != nil {
		return x.RelationDeleteInfo
	}
	return nil
}

type InstanceDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 判断是否边操作
	Operation  OperationEnum `protobuf:"varint,1,opt,name=operation,proto3,enum=vnos.newvcms.OperationEnum" json:"operation,omitempty"`
	DeleteInfo []*DeleteInfo `protobuf:"bytes,2,rep,name=deleteInfo,proto3" json:"deleteInfo,omitempty"`
}

func (x *InstanceDeleteRequest) Reset() {
	*x = InstanceDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceDeleteRequest) ProtoMessage() {}

func (x *InstanceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceDeleteRequest.ProtoReflect.Descriptor instead.
func (*InstanceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{15}
}

func (x *InstanceDeleteRequest) GetOperation() OperationEnum {
	if x != nil {
		return x.Operation
	}
	return OperationEnum_NORMAL
}

func (x *InstanceDeleteRequest) GetDeleteInfo() []*DeleteInfo {
	if x != nil {
		return x.DeleteInfo
	}
	return nil
}

type DeleteResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 删除成功的个数
	Num  int32  `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
	Data string `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteResult) Reset() {
	*x = DeleteResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResult) ProtoMessage() {}

func (x *DeleteResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResult.ProtoReflect.Descriptor instead.
func (*DeleteResult) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteResult) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteResult) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *DeleteResult) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type CreateResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 状态码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 返回消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 唯一标识
	Uid []string `protobuf:"bytes,3,rep,name=uid,proto3" json:"uid,omitempty"`
}

func (x *CreateResult) Reset() {
	*x = CreateResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResult) ProtoMessage() {}

func (x *CreateResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResult.ProtoReflect.Descriptor instead.
func (*CreateResult) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{17}
}

func (x *CreateResult) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateResult) GetUid() []string {
	if x != nil {
		return x.Uid
	}
	return nil
}

type UpdateResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//状态码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	//返回消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateResult) Reset() {
	*x = UpdateResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResult) ProtoMessage() {}

func (x *UpdateResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResult.ProtoReflect.Descriptor instead.
func (*UpdateResult) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateResult) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type InstanceFindByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//唯一标识
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	//repeated
	Identifiers []string `protobuf:"bytes,2,rep,name=identifiers,proto3" json:"identifiers,omitempty"`
}

func (x *InstanceFindByIdRequest) Reset() {
	*x = InstanceFindByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceFindByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceFindByIdRequest) ProtoMessage() {}

func (x *InstanceFindByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceFindByIdRequest.ProtoReflect.Descriptor instead.
func (*InstanceFindByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{19}
}

func (x *InstanceFindByIdRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *InstanceFindByIdRequest) GetIdentifiers() []string {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

type Sorter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyIdentifier string           `protobuf:"bytes,1,opt,name=propertyIdentifier,proto3" json:"propertyIdentifier,omitempty"`
	Order              Sorter_OrderEnum `protobuf:"varint,2,opt,name=order,proto3,enum=vnos.newvcms.Sorter_OrderEnum" json:"order,omitempty"`
}

func (x *Sorter) Reset() {
	*x = Sorter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sorter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sorter) ProtoMessage() {}

func (x *Sorter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sorter.ProtoReflect.Descriptor instead.
func (*Sorter) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{20}
}

func (x *Sorter) GetPropertyIdentifier() string {
	if x != nil {
		return x.PropertyIdentifier
	}
	return ""
}

func (x *Sorter) GetOrder() Sorter_OrderEnum {
	if x != nil {
		return x.Order
	}
	return Sorter_ORDERASC
}

type InstanceFindByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 状态码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 返回消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 数据
	Data string `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *InstanceFindByIdResponse) Reset() {
	*x = InstanceFindByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceFindByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceFindByIdResponse) ProtoMessage() {}

func (x *InstanceFindByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceFindByIdResponse.ProtoReflect.Descriptor instead.
func (*InstanceFindByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{21}
}

func (x *InstanceFindByIdResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *InstanceFindByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InstanceFindByIdResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type BatchImportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileUri string `protobuf:"bytes,1,opt,name=file_uri,json=fileUri,proto3" json:"file_uri,omitempty"`
}

func (x *BatchImportRequest) Reset() {
	*x = BatchImportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchImportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchImportRequest) ProtoMessage() {}

func (x *BatchImportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchImportRequest.ProtoReflect.Descriptor instead.
func (*BatchImportRequest) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{22}
}

func (x *BatchImportRequest) GetFileUri() string {
	if x != nil {
		return x.FileUri
	}
	return ""
}

type BatchImportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 状态码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 返回消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Success string `protobuf:"bytes,3,opt,name=success,proto3" json:"success,omitempty"`
	Failed  string `protobuf:"bytes,4,opt,name=failed,proto3" json:"failed,omitempty"`
	// 结果完成度
	RateOfProgress string `protobuf:"bytes,5,opt,name=rate_of_progress,json=rateOfProgress,proto3" json:"rate_of_progress,omitempty"`
}

func (x *BatchImportResponse) Reset() {
	*x = BatchImportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_newvcms_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchImportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchImportResponse) ProtoMessage() {}

func (x *BatchImportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_newvcms_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchImportResponse.ProtoReflect.Descriptor instead.
func (*BatchImportResponse) Descriptor() ([]byte, []int) {
	return file_proto_newvcms_proto_rawDescGZIP(), []int{23}
}

func (x *BatchImportResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BatchImportResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BatchImportResponse) GetSuccess() string {
	if x != nil {
		return x.Success
	}
	return ""
}

func (x *BatchImportResponse) GetFailed() string {
	if x != nil {
		return x.Failed
	}
	return ""
}

func (x *BatchImportResponse) GetRateOfProgress() string {
	if x != nil {
		return x.RateOfProgress
	}
	return ""
}

var File_proto_newvcms_proto protoreflect.FileDescriptor

var file_proto_newvcms_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x76, 0x6e, 0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76,
	0x63, 0x6d, 0x73, 0x22, 0xcb, 0x02, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x76, 0x6e, 0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76,
	0x63, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x6e, 0x6f, 0x73, 0x2e, 0x6e,
	0x65, 0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x62, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc1, 0x03, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x76, 0x6e, 0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76,
	0x63, 0x6d, 0x73, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x76, 0x6e, 0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x62, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x62, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x62, 0x79,
	0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x62, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x12, 0x47, 0x0a, 0x10, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x6e, 0x6f,
	0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x0c, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x64, 0x22, 0x85, 0x02, 0x0a, 0x0c, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x3e, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x76, 0x6e, 0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d,
	0x73, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x6e,
	0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x39, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x51, 0x0a, 0x15, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76,
	0x6e, 0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x22, 0x58, 0x0a, 0x16, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x51, 0x0a,
	0x15, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x6e, 0x6f, 0x73,
	0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x22, 0x52, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x6e, 0x6f,
	0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x78, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x6e, 0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77,
	0x76, 0x63, 0x6d, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x35, 0x0a, 0x13, 0x4d, 0x65, 0x74,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x22, 0x58, 0x0a, 0x14, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc2, 0x01, 0x0a, 0x12, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x2b, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x64, 0x22,
	0x92, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x52, 0x0a, 0x14, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x76, 0x6e, 0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x12, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8c, 0x01, 0x0a, 0x15, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39,
	0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x6e, 0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x76, 0x6e, 0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x62, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4e, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x3c, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4d, 0x0a, 0x17, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x06, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x12,
	0x2e, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x34, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x76, 0x6e, 0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e, 0x53, 0x6f,
	0x72, 0x74, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x28, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e,
	0x75, 0x6d, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x41, 0x53, 0x43, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x44, 0x45, 0x53, 0x43, 0x10, 0x01, 0x22,
	0x5c, 0x0a, 0x18, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2f, 0x0a,
	0x12, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x69, 0x22, 0x9f,
	0x01, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6f,
	0x66, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x2a, 0x29, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75,
	0x6d, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x32, 0x99, 0x05, 0x0a, 0x0f,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x53, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x23, 0x2e, 0x76, 0x6e, 0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x6e, 0x6f, 0x73, 0x2e, 0x6e, 0x65,
	0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x2e, 0x76, 0x6e, 0x6f, 0x73, 0x2e, 0x6e, 0x65,
	0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x6e,
	0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x2e, 0x76, 0x6e,
	0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x76, 0x6e, 0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x57,
	0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x21,
	0x2e, 0x76, 0x6e, 0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x76, 0x6e, 0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x25, 0x2e, 0x76, 0x6e,
	0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x76, 0x6e, 0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d,
	0x73, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x18,
	0x46, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x76, 0x6e, 0x6f, 0x73, 0x2e,
	0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x76, 0x6e,
	0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44,
	0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x64, 0x0a, 0x19, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x20,
	0x2e, 0x76, 0x6e, 0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x76, 0x6e, 0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x6e, 0x65, 0x77, 0x76, 0x63, 0x6d, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_newvcms_proto_rawDescOnce sync.Once
	file_proto_newvcms_proto_rawDescData = file_proto_newvcms_proto_rawDesc
)

func file_proto_newvcms_proto_rawDescGZIP() []byte {
	file_proto_newvcms_proto_rawDescOnce.Do(func() {
		file_proto_newvcms_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_newvcms_proto_rawDescData)
	})
	return file_proto_newvcms_proto_rawDescData
}

var file_proto_newvcms_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_newvcms_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_proto_newvcms_proto_goTypes = []interface{}{
	(OperationEnum)(0),               // 0: vnos.newvcms.OperationEnum
	(Sorter_OrderEnum)(0),            // 1: vnos.newvcms.Sorter.OrderEnum
	(*RelationFilter)(nil),           // 2: vnos.newvcms.RelationFilter
	(*PropertyExpression)(nil),       // 3: vnos.newvcms.PropertyExpression
	(*SearchCondition)(nil),          // 4: vnos.newvcms.SearchCondition
	(*RelationInfo)(nil),             // 5: vnos.newvcms.RelationInfo
	(*InstanceInfo)(nil),             // 6: vnos.newvcms.InstanceInfo
	(*InstanceCreateRequest)(nil),    // 7: vnos.newvcms.InstanceCreateRequest
	(*InstanceCreateResponse)(nil),   // 8: vnos.newvcms.InstanceCreateResponse
	(*InstanceUpdateRequest)(nil),    // 9: vnos.newvcms.InstanceUpdateRequest
	(*InstanceFindRequest)(nil),      // 10: vnos.newvcms.InstanceFindRequest
	(*FindResponse)(nil),             // 11: vnos.newvcms.FindResponse
	(*InstanceFindResponse)(nil),     // 12: vnos.newvcms.InstanceFindResponse
	(*MetaDataFindRequest)(nil),      // 13: vnos.newvcms.MetaDataFindRequest
	(*MetaDataFindResponse)(nil),     // 14: vnos.newvcms.MetaDataFindResponse
	(*RelationDeleteInfo)(nil),       // 15: vnos.newvcms.RelationDeleteInfo
	(*DeleteInfo)(nil),               // 16: vnos.newvcms.DeleteInfo
	(*InstanceDeleteRequest)(nil),    // 17: vnos.newvcms.InstanceDeleteRequest
	(*DeleteResult)(nil),             // 18: vnos.newvcms.DeleteResult
	(*CreateResult)(nil),             // 19: vnos.newvcms.CreateResult
	(*UpdateResult)(nil),             // 20: vnos.newvcms.UpdateResult
	(*InstanceFindByIdRequest)(nil),  // 21: vnos.newvcms.InstanceFindByIdRequest
	(*Sorter)(nil),                   // 22: vnos.newvcms.Sorter
	(*InstanceFindByIdResponse)(nil), // 23: vnos.newvcms.InstanceFindByIdResponse
	(*BatchImportRequest)(nil),       // 24: vnos.newvcms.BatchImportRequest
	(*BatchImportResponse)(nil),      // 25: vnos.newvcms.BatchImportResponse
	nil,                              // 26: vnos.newvcms.InstanceInfo.ValuesEntry
}
var file_proto_newvcms_proto_depIdxs = []int32{
	3,  // 0: vnos.newvcms.RelationFilter.property_expression:type_name -> vnos.newvcms.PropertyExpression
	4,  // 1: vnos.newvcms.RelationFilter.condition:type_name -> vnos.newvcms.SearchCondition
	22, // 2: vnos.newvcms.SearchCondition.sorters:type_name -> vnos.newvcms.Sorter
	3,  // 3: vnos.newvcms.SearchCondition.property_expression:type_name -> vnos.newvcms.PropertyExpression
	2,  // 4: vnos.newvcms.SearchCondition.relation_filters:type_name -> vnos.newvcms.RelationFilter
	26, // 5: vnos.newvcms.InstanceInfo.values:type_name -> vnos.newvcms.InstanceInfo.ValuesEntry
	5,  // 6: vnos.newvcms.InstanceInfo.relation_info:type_name -> vnos.newvcms.RelationInfo
	6,  // 7: vnos.newvcms.InstanceCreateRequest.instances:type_name -> vnos.newvcms.InstanceInfo
	6,  // 8: vnos.newvcms.InstanceUpdateRequest.instances:type_name -> vnos.newvcms.InstanceInfo
	4,  // 9: vnos.newvcms.InstanceFindRequest.condition:type_name -> vnos.newvcms.SearchCondition
	11, // 10: vnos.newvcms.InstanceFindResponse.result:type_name -> vnos.newvcms.FindResponse
	15, // 11: vnos.newvcms.DeleteInfo.relation_delete_info:type_name -> vnos.newvcms.RelationDeleteInfo
	0,  // 12: vnos.newvcms.InstanceDeleteRequest.operation:type_name -> vnos.newvcms.OperationEnum
	16, // 13: vnos.newvcms.InstanceDeleteRequest.deleteInfo:type_name -> vnos.newvcms.DeleteInfo
	1,  // 14: vnos.newvcms.Sorter.order:type_name -> vnos.newvcms.Sorter.OrderEnum
	7,  // 15: vnos.newvcms.InstanceService.CreateInstance:input_type -> vnos.newvcms.InstanceCreateRequest
	17, // 16: vnos.newvcms.InstanceService.DeleteInstance:input_type -> vnos.newvcms.InstanceDeleteRequest
	9,  // 17: vnos.newvcms.InstanceService.UpdateInstance:input_type -> vnos.newvcms.InstanceUpdateRequest
	10, // 18: vnos.newvcms.InstanceService.FindInstance:input_type -> vnos.newvcms.InstanceFindRequest
	21, // 19: vnos.newvcms.InstanceService.FindInstanceById:input_type -> vnos.newvcms.InstanceFindByIdRequest
	13, // 20: vnos.newvcms.InstanceService.FindMetaDataByIdentifier:input_type -> vnos.newvcms.MetaDataFindRequest
	24, // 21: vnos.newvcms.InstanceService.BatchImportInstanceStream:input_type -> vnos.newvcms.BatchImportRequest
	19, // 22: vnos.newvcms.InstanceService.CreateInstance:output_type -> vnos.newvcms.CreateResult
	18, // 23: vnos.newvcms.InstanceService.DeleteInstance:output_type -> vnos.newvcms.DeleteResult
	20, // 24: vnos.newvcms.InstanceService.UpdateInstance:output_type -> vnos.newvcms.UpdateResult
	12, // 25: vnos.newvcms.InstanceService.FindInstance:output_type -> vnos.newvcms.InstanceFindResponse
	23, // 26: vnos.newvcms.InstanceService.FindInstanceById:output_type -> vnos.newvcms.InstanceFindByIdResponse
	14, // 27: vnos.newvcms.InstanceService.FindMetaDataByIdentifier:output_type -> vnos.newvcms.MetaDataFindResponse
	25, // 28: vnos.newvcms.InstanceService.BatchImportInstanceStream:output_type -> vnos.newvcms.BatchImportResponse
	22, // [22:29] is the sub-list for method output_type
	15, // [15:22] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_newvcms_proto_init() }
func file_proto_newvcms_proto_init() {
	if File_proto_newvcms_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_newvcms_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyExpression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceFindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceFindResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaDataFindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaDataFindResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationDeleteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceFindByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sorter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceFindByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchImportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_newvcms_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchImportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_newvcms_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_newvcms_proto_goTypes,
		DependencyIndexes: file_proto_newvcms_proto_depIdxs,
		EnumInfos:         file_proto_newvcms_proto_enumTypes,
		MessageInfos:      file_proto_newvcms_proto_msgTypes,
	}.Build()
	File_proto_newvcms_proto = out.File
	file_proto_newvcms_proto_rawDesc = nil
	file_proto_newvcms_proto_goTypes = nil
	file_proto_newvcms_proto_depIdxs = nil
}
